name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build-windows:
    name: Build Windows binaries
    runs-on: windows-2022
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Cargo
        uses: Swatinem/rust-cache@v2

      - name: Build release binaries
        run: |
          cargo build --release -p mdmcpsrvr -p mdmcpcfg

      - name: Prepare dist folder
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force dist | Out-Null
          Copy-Item target\release\mdmcpsrvr.exe dist\mdmcpsrvr-x86_64-windows.exe
          Copy-Item target\release\mdmcpcfg.exe  dist\mdmcpcfg-x86_64-windows.exe
          Get-ChildItem dist

      - name: Generate checksums
        shell: pwsh
        run: |
          $files = Get-ChildItem dist\*.exe
          $out = @()
          foreach ($f in $files) {
            $h = Get-FileHash $f.FullName -Algorithm SHA256
            $out += ("{0}  {1}" -f $h.Hash.ToLower(), $f.Name)
          }
          $out -join "`n" | Out-File -NoNewline dist\SHA256SUMS.txt -Encoding ASCII
          Get-Content dist\SHA256SUMS.txt

      # NOTE: checksum signing is performed on Linux after artifacts are collected

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-dist
          path: dist/*

  create-release:
    name: Create GitHub Release
    needs: build-windows
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    env:
      MINISIGN_SECRET_KEY: ${{ secrets.MINISIGN_SECRET_KEY }}
      MINISIGN_KEY_PASSWORD: ${{ secrets.MINISIGN_KEY_PASSWORD }}
    steps:
      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-dist
          path: dist

      - name: Sign checksums (minisign)
        if: ${{ env.MINISIGN_SECRET_KEY != '' }}
        shell: bash
        run: |
          set -euo pipefail
          echo "$MINISIGN_SECRET_KEY" > minisign.key
          sudo apt-get update && sudo apt-get install -y minisign
          # minisign will prompt; feed the passphrase via stdin
          minisign -s minisign.key -Sm dist/SHA256SUMS.txt <<EOF
          $MINISIGN_KEY_PASSWORD
          EOF
          ls -l dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          draft: false
          prerelease: false
          generate_release_notes: true
          tag_name: ${{ github.ref_name }}
          files: |
            dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
